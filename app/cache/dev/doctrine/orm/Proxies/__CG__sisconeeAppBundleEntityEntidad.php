<?php

namespace Proxies\__CG__\sisconee\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Entidad extends \sisconee\AppBundle\Entity\Entidad implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'id', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'codReeup', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'nombre', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'siglas', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'organismo', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'entidadPadre', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'nae', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'correo', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'direccion', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'telefono', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'activo', 'servicios', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'provincia');
        }

        return array('__isInitialized__', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'id', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'codReeup', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'nombre', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'siglas', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'organismo', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'entidadPadre', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'nae', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'correo', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'direccion', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'telefono', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'activo', 'servicios', '' . "\0" . 'sisconee\\AppBundle\\Entity\\Entidad' . "\0" . 'provincia');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Entidad $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodReeup($codreeup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodReeup', array($codreeup));

        return parent::setCodReeup($codreeup);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodReeup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodReeup', array());

        return parent::getCodReeup();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', array($nombre));

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', array());

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setSiglas($siglas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSiglas', array($siglas));

        return parent::setSiglas($siglas);
    }

    /**
     * {@inheritDoc}
     */
    public function getSiglas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSiglas', array());

        return parent::getSiglas();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganismo(\sisconee\AppBundle\Entity\Organismo $organismo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganismo', array($organismo));

        return parent::setOrganismo($organismo);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganismo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganismo', array());

        return parent::getOrganismo();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntidadPadre(\sisconee\AppBundle\Entity\Entidad $entidad = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntidadPadre', array($entidad));

        return parent::setEntidadPadre($entidad);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntidadPadre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntidadPadre', array());

        return parent::getEntidadPadre();
    }

    /**
     * {@inheritDoc}
     */
    public function setNae(\sisconee\AppBundle\Entity\Nae $nae = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNae', array($nae));

        return parent::setNae($nae);
    }

    /**
     * {@inheritDoc}
     */
    public function getNae()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNae', array());

        return parent::getNae();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorreo($correo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorreo', array($correo));

        return parent::setCorreo($correo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorreo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorreo', array());

        return parent::getCorreo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDireccion($direccion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDireccion', array($direccion));

        return parent::setDireccion($direccion);
    }

    /**
     * {@inheritDoc}
     */
    public function getDireccion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDireccion', array());

        return parent::getDireccion();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelefono($telefono)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelefono', array($telefono));

        return parent::setTelefono($telefono);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelefono()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelefono', array());

        return parent::getTelefono();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivo($activo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivo', array($activo));

        return parent::setActivo($activo);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivo', array());

        return parent::getActivo();
    }

    /**
     * {@inheritDoc}
     */
    public function getServicios()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServicios', array());

        return parent::getServicios();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvincia(\sisconee\AppBundle\Entity\Provincia $provincia = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvincia', array($provincia));

        return parent::setProvincia($provincia);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvincia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvincia', array());

        return parent::getProvincia();
    }

}
